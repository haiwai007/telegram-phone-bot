name: 🤖 简化版机器人部署

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    # 每6小时重启一次，保持活跃
    - cron: '0 */6 * * *'

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6小时超时
    
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v4
      
    - name: 🐍 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: 📦 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔧 配置环境
      run: |
        mkdir -p 配置文件
        echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > 配置文件/环境配置.env
        echo "LOG_LEVEL=INFO" >> 配置文件/环境配置.env
        echo "TIMEZONE=Asia/Shanghai" >> 配置文件/环境配置.env
        
    - name: 🧪 测试机器人连接
      run: |
        python -c "
        import requests
        import os
        from dotenv import load_dotenv
        
        load_dotenv('配置文件/环境配置.env')
        bot_token = os.getenv('BOT_TOKEN')
        
        response = requests.get(f'https://api.telegram.org/bot{bot_token}/getMe', timeout=10)
        data = response.json()
        
        if data['ok']:
            bot_info = data['result']
            print(f'✅ 机器人连接成功: @{bot_info[\"username\"]}')
        else:
            print('❌ 机器人连接失败')
            exit(1)
        "
        
    - name: 🚀 启动机器人
      run: |
        echo "🤖 启动简化版Telegram机器人..."
        echo "⏰ 开始时间: $(date)"
        echo "🔄 将运行约6小时后自动重启"
        
        # 启动机器人，设置超时
        timeout 21000 python 简化机器人.py || {
          echo "⚠️ 机器人运行超时，准备重启..."
          echo "⏰ 结束时间: $(date)"
          exit 0
        }
        
    - name: 📊 上传日志
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: bot-logs-${{ github.run_number }}
        path: |
          *.log
        retention-days: 7
