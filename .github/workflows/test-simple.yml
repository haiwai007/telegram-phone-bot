name: 🧪 简单测试

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v4
      
    - name: 🐍 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 安装基础依赖
      run: |
        python -m pip install --upgrade pip
        pip install requests python-telegram-bot python-dotenv pytz
        
    - name: 🔧 创建简单配置
      run: |
        mkdir -p 配置文件
        echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" > 配置文件/环境配置.env
        echo "LOG_LEVEL=INFO" >> 配置文件/环境配置.env
        echo "TIMEZONE=Asia/Shanghai" >> 配置文件/环境配置.env
        
    - name: 🤖 测试机器人连接
      run: |
        python -c "
        import requests
        import os
        from dotenv import load_dotenv
        
        load_dotenv('配置文件/环境配置.env')
        bot_token = os.getenv('BOT_TOKEN')
        
        if not bot_token:
            print('❌ BOT_TOKEN 未设置')
            exit(1)
            
        try:
            response = requests.get(f'https://api.telegram.org/bot{bot_token}/getMe', timeout=10)
            if response.status_code == 200:
                data = response.json()
                if data['ok']:
                    bot_info = data['result']
                    print(f'✅ 机器人连接成功')
                    print(f'🤖 机器人名称: {bot_info[\"first_name\"]}')
                    print(f'👤 用户名: @{bot_info[\"username\"]}')
                    print(f'🆔 ID: {bot_info[\"id\"]}')
                else:
                    print(f'❌ API返回错误: {data}')
                    exit(1)
            else:
                print(f'❌ HTTP错误: {response.status_code}')
                exit(1)
        except Exception as e:
            print(f'❌ 连接失败: {e}')
            exit(1)
        "
        
    - name: 📋 测试项目结构
      run: |
        echo "📁 项目结构检查:"
        ls -la
        echo ""
        echo "📁 核心模块:"
        ls -la 核心模块/ || echo "❌ 核心模块目录不存在"
        echo ""
        echo "📁 配置文件:"
        ls -la 配置文件/ || echo "❌ 配置文件目录不存在"
        
    - name: ✅ 测试完成
      run: |
        echo "🎉 简单测试完成！"
        echo "✅ 机器人 Token 有效"
        echo "✅ Python 环境正常"
        echo "✅ 基础依赖安装成功"
