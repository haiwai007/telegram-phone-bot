name: 💾 数据备份

on:
  schedule:
    # 每天凌晨2点备份数据
    - cron: '0 2 * * *'
  workflow_dispatch:

jobs:
  backup:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v4
      
    - name: 🐍 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r 配置文件/依赖包列表.txt
        
    - name: 🔧 配置环境变量
      run: |
        echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> 配置文件/环境配置.env
        echo "DATABASE_PATH=phone_records.db" >> 配置文件/环境配置.env
        echo "LOG_LEVEL=INFO" >> 配置文件/环境配置.env
        echo "TIMEZONE=Asia/Shanghai" >> 配置文件/环境配置.env
        echo "MAX_PHONE_LENGTH=15" >> 配置文件/环境配置.env
        echo "MIN_PHONE_LENGTH=8" >> 配置文件/环境配置.env
        
    - name: 📊 创建数据备份
      run: |
        echo "💾 开始数据备份..."
        mkdir -p 备份数据
        
        # 创建备份脚本
        cat > 备份数据/backup_script.py << 'EOF'
        import sys
        import os
        import json
        import sqlite3
        from datetime import datetime
        
        # 添加核心模块路径
        sys.path.insert(0, '核心模块')
        
        try:
            from 数据库管理 import DatabaseManager
            
            # 初始化数据库管理器
            db = DatabaseManager()
            
            # 获取所有记录
            records = db.get_all_records()
            stats = db.get_statistics()
            
            # 创建备份数据
            backup_data = {
                'backup_time': datetime.now().isoformat(),
                'statistics': stats,
                'total_records': len(records),
                'records': records
            }
            
            # 保存为JSON格式
            backup_file = f"备份数据/backup_{datetime.now().strftime('%Y%m%d_%H%M%S')}.json"
            with open(backup_file, 'w', encoding='utf-8') as f:
                json.dump(backup_data, f, ensure_ascii=False, indent=2)
            
            print(f"✅ 备份完成: {backup_file}")
            print(f"📊 备份统计:")
            print(f"  - 总记录数: {len(records)}")
            print(f"  - 唯一号码: {stats.get('unique_phones', 0)}")
            print(f"  - 重复记录: {stats.get('duplicate_count', 0)}")
            
        except Exception as e:
            print(f"❌ 备份失败: {e}")
            exit(1)
        EOF
        
        python 备份数据/backup_script.py
        
    - name: 📤 上传备份文件
      uses: actions/upload-artifact@v3
      with:
        name: data-backup-${{ github.run_number }}
        path: 备份数据/*.json
        retention-days: 30
        
    - name: 📋 备份报告
      run: |
        echo "📊 备份完成报告"
        echo "=================="
        echo "📅 备份时间: $(date)"
        echo "📁 备份文件:"
        ls -la 备份数据/
        echo "✅ 备份已上传到 GitHub Artifacts"
        echo "🔄 保留期限: 30天"
