name: 🏥 机器人健康检查

on:
  schedule:
    # 每小时检查一次
    - cron: '0 * * * *'
  workflow_dispatch:

jobs:
  health-check:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v4
      
    - name: 🐍 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 安装基础依赖
      run: |
        python -m pip install --upgrade pip
        pip install requests python-dotenv
        
    - name: 🏥 检查机器人状态
      run: |
        python -c "
        import requests
        import os
        from datetime import datetime
        
        bot_token = '${{ secrets.BOT_TOKEN }}'
        
        if not bot_token:
            print('❌ BOT_TOKEN 未设置')
            exit(1)
            
        try:
            # 检查机器人API状态
            response = requests.get(f'https://api.telegram.org/bot{bot_token}/getMe', timeout=10)
            
            if response.status_code == 200:
                data = response.json()
                if data['ok']:
                    bot_info = data['result']
                    print(f'✅ 机器人API正常')
                    print(f'🤖 机器人: @{bot_info[\"username\"]}')
                    print(f'⏰ 检查时间: {datetime.now().strftime(\"%Y-%m-%d %H:%M:%S\")}')
                    
                    # 检查更新
                    updates_response = requests.get(f'https://api.telegram.org/bot{bot_token}/getUpdates?limit=1', timeout=10)
                    if updates_response.status_code == 200:
                        print('✅ 机器人更新接收正常')
                    else:
                        print('⚠️ 机器人更新接收异常')
                else:
                    print(f'❌ API返回错误: {data}')
                    exit(1)
            else:
                print(f'❌ HTTP错误: {response.status_code}')
                exit(1)
                
        except Exception as e:
            print(f'❌ 健康检查失败: {e}')
            exit(1)
        "
        
    - name: 📊 检查GitHub Actions状态
      run: |
        echo "📊 GitHub Actions 运行状态检查"
        echo "⏰ 当前时间: $(date)"
        echo "🔄 工作流运行编号: ${{ github.run_number }}"
        echo "📝 提交SHA: ${{ github.sha }}"
        
        # 检查是否有其他机器人实例在运行
        echo "🔍 检查并发运行状态..."
        echo "✅ 健康检查完成"
